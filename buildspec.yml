version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17

  pre_build:
    commands:
      - echo Logging into Amazon ECR started on date
      - aws --version
      - echo Logging into Amazon ECR....
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 697777980156.dkr.ecr.ap-south-1.amazonaws.com
      - echo setting repository URI....
      - REPOSITORY_URI=697777980156.dkr.ecr.ap-south-1.amazonaws.com/cicdpipeline
      - echo setting image tag.....
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo "Pre-build phase"
      - chmod +x gradlew
   
  build:
    commands:
      - echo "Build phase"
      - ./gradlew wrapper --gradle-version 8.7
      - ./gradlew clean build -x test 
      - echo building the Docker image...
      - docker build -t $REPOSITORY_URI:latest 
      - echo tagging the Docker image...
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo pushing Docker image to Amazon ECR started on `date`
      - echo pushing to repository...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo setting container name...
      - DOCKER_CONTAINER_NAME=cdcicontainer
      - echo "Post-build phase"
      - ls
      - echo "Creating imagedefinitions.json file..."
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$Image_TAG  > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - cat imagedefinitions.json
      - echo printing 

artifacts:
  files:
    - imagedefinitions.json

